{"version":3,"sources":["Components/Welcome/Welcome.js","Components/WineList/WineList.js","App.js","serviceWorker.js","Components/NavBar/NavBarbs.js","Components/404/404.js","Components/Score/Score.js","Components/Router/Router.js","index.js"],"names":["Welcome","React","useState","localStorage","getItem","value","setValue","useEffect","setItem","className","type","onChange","event","target","baseUrl","API_KEY","process","WineList","state","wines","wineArray","visible","loading","componentDidMount","a","axios","get","headers","Accept","Authorization","then","res","console","log","data","results","setState","winesToArray","Array","from","this","length","Spinner","animation","role","map","wine","key","score","wine_id","vintage","regions","country","journalist_count","Component","App","welcomeVis","checkRender","alert","userName","Button","href","variant","color","onClick","Boolean","window","location","hostname","match","NavBarjs","props","checkVisibility","cartState","addEventListener","bind","emptyArr","JSON","parse","cartMap","cartPopover","Popover","Title","as","Content","index","array","splice","Navbar","bg","Brand","Nav","NavDropdown","title","id","Item","scoreStateDesc","scoreStateAsc","Link","Form","inline","FormControl","placeholder","OverlayTrigger","trigger","placement","overlay","ShoppingCartOutlined","style","fontSize","cursor","margin","NotFound","sortAscDesc","Scores","setData","isLoading","setIsLoading","cartArray","result","fetchData","filterSearch","ToggleButtonGroup","name","InputGroup","Text","ToggleButton","lg","Prepend","aria-label","aria-describedby","Control","Feedback","item","push","stringify","Router","routerState","scoreAscDes","yearSelectionChild","NavBarbs","exact","path","component","Score","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d310b5f6.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"./welcome.css\"\r\n\r\n\r\nexport const Welcome = () => {\r\n\r\n  const [value, setValue] = React.useState(localStorage.getItem('userName') || '');\r\n \r\n  React.useEffect(() => {\r\n    localStorage.setItem('userName', value);\r\n  }, [value]);\r\n      \r\n  const onChange = event => setValue(event.target.value);\r\n  \r\n  return (\r\n    <div className=\"welcomeDiv\">\r\n      <h1>Please input a name to start</h1>\r\n      <input type=\"text\" onChange={onChange} />\r\n    </div>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\nimport {Spinner} from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport \"./winelist.css\";\r\n\r\nexport const baseUrl = \"globalwinescores/latest/?limit=20\";\r\n\r\nconst API_KEY = process.env.REACT_APP_API_KEY;\r\n\r\n\r\nclass WineList extends Component {\r\n  state = {\r\n    wines: [],\r\n    wineArray: [],\r\n    visible: false,\r\n    loading: true\r\n  };\r\n\r\n\r\n  //   Initial API Call\r\n  componentDidMount = async () => {\r\n    \r\n    // checkLoading = () =>{\r\n    //   if (this.state.wineArray && this.state.wineArray.length > 0)\r\n    //   this.setState({loading: false})\r\n    // }\r\n\r\n    \r\n     await axios\r\n      .get(`${baseUrl}`, {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          Authorization: API_KEY\r\n        }\r\n      })\r\n    //   Gets API results, sets wines state to result object\r\n      .then(res => {\r\n        console.log(res.data.results);\r\n        this.setState({ wines: res.data.results });\r\n      })\r\n    //   Takes wines state and turns into Array\r\n      .then(() => { \r\n          const winesToArray = Array.from(this.state.wines);\r\n          this.setState({wineArray: winesToArray});\r\n        })\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"wineListWrapper\">\r\n          {/* Maps over the wineArray to display results */}\r\n        {!this.state.wineArray.length ? <div className=\"spinnerWl\"><Spinner animation=\"border\" role=\"status\">\r\n        </Spinner><p>Loading...</p></div> : null}\r\n\r\n        {this.state.wineArray.map(wine => \r\n        <div className=\"wineTile\" key={wine.score + wine.wine_id}>\r\n            {!this.state.visible ? <div>\r\n              <h2 className=\"wineName\">{wine.wine}</h2>\r\n              <li className=\"wineVintage\">{wine.vintage}</li>\r\n              <li className=\"wineLocation\">{wine.regions[0]}, {wine.country}</li>\r\n\r\n              <div className=\"bottomContainer\">\r\n              <div className=\"reviewDiv\">\r\n                <li>Total Reviews: {wine.journalist_count}</li>\r\n              </div>\r\n              <div className=\"scoreDiv\">\r\n                <li>Score: {wine.score}</li>\r\n              </div>\r\n              </div>\r\n              </div> : null}\r\n        </div>\r\n\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WineList;\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nimport { Button } from \"@material-ui/core\";\r\n// import { makeStyles, createStyles } from \"@material-ui/core/styles\"\r\nimport {Welcome} from './Components/Welcome/Welcome';\r\nimport WineList from './Components/WineList/WineList';\r\n// import NavBar from \"./Components/NavBar/NavBar\";\r\n// import NavBarbs from './Components/NavBar/NavBarbs';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nclass App extends Component {\r\n// constructor(props){\r\n//   super(props)\r\n//   this.state = {\r\n//     scoreAscDes: '',\r\n//     checkVisibility: this.props.checkVisibility\r\n//   }\r\n// }\r\n  state = {\r\n    visible: '',\r\n    welcomeVis: true\r\n  }\r\n\r\n  \r\n  checkRender = () =>{\r\n    if (localStorage.getItem('myValueInLocalStorage'))\r\n    this.setState({visible: true})\r\n    else {\r\n      alert('Please enter a Name');\r\n    }\r\n  }\r\n  \r\n  \r\n  \r\n  render(){\r\n    const userName = localStorage.getItem('userName');\r\n    \r\n    \r\n    return (\r\n      <div className=\"App\">\r\n\r\n      {/* NavBar */}\r\n      {/* <NavBarbs/> */}\r\n       {/* {this.state.visible ? <NavBar/> : null} */}\r\n\r\n        {/* Initial Landing page */}\r\n        {!userName ? <Welcome/> : null}\r\n        \r\n        \r\n        {/* Welcome Screen */}\r\n        {userName ? <div className=\"appWelcomeDiv\"><h1>Welcome {userName}</h1>\r\n          <h2>Here are the latest Wine Scores</h2></div>\r\n        : null}\r\n      \r\n\r\n      {/* WineList/API Call */}\r\n      {userName ? <WineList/> : null}\r\n      \r\n\r\n  {/* Enter Button */}\r\n    {!userName ? <Button href=\"/\" className=\"enterBtn\" variant=\"contained\" color=\"default\" onClick={() => {\r\n        this.checkRender()\r\n      }}>Enter</Button> : null}\r\n\r\n    </div>\r\n  );\r\n}\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { Component } from \"react\";\r\nimport {\r\n  Button,\r\n  Navbar,\r\n  Nav,\r\n  Form,\r\n  FormControl,\r\n  NavDropdown,\r\n  Popover,\r\n  OverlayTrigger\r\n} from \"react-bootstrap\";\r\nimport { ShoppingCartOutlined } from \"@ant-design/icons\";\r\nimport \"./navbarbs.css\";\r\n\r\nclass NavBarjs extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      // scoreAscDes: '',\r\n      checkVisibility: this.props.checkVisibility,\r\n      cartState: []\r\n    };\r\n  }\r\n\r\n  checkVisibility() {\r\n    console.log(\"storage check\");\r\n  }\r\n\r\n  // Checks for username\r\n  componentDidMount() {\r\n    this.checkVisibility();\r\n    window.addEventListener(this.userName, this.checkVisibility.bind(this));\r\n  }\r\n\r\n  render(props) {\r\n    const userName = localStorage.getItem(\"userName\");\r\n    console.log(userName);\r\n\r\n    // emptyArr stores cart items from filter\r\n    var emptyArr = JSON.parse(localStorage.getItem(\"userCart\")) || [];\r\n\r\n    const cartMap = () => {\r\n      this.setState({ cartState: emptyArr });\r\n    };\r\n\r\n\r\n    // Cart Popup Display\r\n    const cartPopover = (\r\n      <Popover>\r\n        <Popover.Title as=\"h2\">Cart</Popover.Title>\r\n        <Popover.Content>\r\n          {emptyArr.map((wine, index) => {\r\n            return (\r\n              <div key={index}>\r\n                <div>\r\n                  <h4>{wine.wine}</h4>\r\n                  <li>{wine.vintage}</li>\r\n                  <li>\r\n                    {wine.regions[0]}, {wine.country}\r\n                  </li>\r\n                  <li>Score: {wine.score}</li>\r\n                </div>\r\n                <Button onClick={()=>{\r\n                  var array = [...this.state.cartState];\r\n                  array.splice(index, 1)\r\n                  emptyArr = array;\r\n                  cartMap();\r\n                }\r\n                } variant=\"danger\">Delete</Button>\r\n                <hr></hr>\r\n              </div>\r\n            );\r\n          })}\r\n        </Popover.Content>\r\n      </Popover>\r\n    );\r\n\r\n    // function Something(){\r\n    //   React.useEffect(()=>{\r\n    //     function checkStorage(){\r\n    //       this.setState({visible: true})\r\n    //     }\r\n    //     window.addEventListener(this.userName, Something)\r\n    //   })\r\n    // }\r\n\r\n    return (\r\n      <div className=\"BSNavWrapper\">\r\n        <Navbar bg=\"dark\" variant=\"dark\">\r\n          <Navbar.Brand href=\"/\">WineScoresAPI</Navbar.Brand>\r\n          {userName ? (\r\n            <>\r\n\r\n            {/* Score dropdown */}\r\n              <Nav className=\"mr-auto\">\r\n                <NavDropdown title=\"Score\" id=\"basic-nav-dropdown\">\r\n                  <NavDropdown.Item\r\n                    onClick={this.props.scoreStateDesc}\r\n                    href=\"scoredes\"\r\n                  >\r\n                    Descending\r\n                  </NavDropdown.Item>\r\n                  <NavDropdown.Item\r\n                    onClick={this.props.scoreStateAsc}\r\n                    href=\"scoredes\"\r\n                  >\r\n                    Ascending\r\n                  </NavDropdown.Item>\r\n                </NavDropdown>\r\n\r\n                {/* Filter route */}\r\n                <Nav.Link href=\"scoredes\">Filter</Nav.Link>\r\n              </Nav>\r\n\r\n              {/* Search Field & Button */}\r\n              <Form inline>\r\n                <FormControl\r\n                  type=\"text\"\r\n                  placeholder=\"Search\"\r\n                  className=\"mr-sm-2\"\r\n                />\r\n                <Button variant=\"outline-info\">Search</Button>\r\n              </Form>\r\n\r\n              {/* Shopping cart button */}\r\n              <OverlayTrigger\r\n                trigger=\"click\"\r\n                placement=\"bottom\"\r\n                overlay={cartPopover}\r\n              >\r\n                <ShoppingCartOutlined\r\n                  onClick={cartMap}\r\n                  style={{\r\n                    fontSize: \"35px\",\r\n                    cursor: \"pointer\",\r\n                    margin: \"0 15px\",\r\n                    color: \"rgba(255, 255, 255, 0.7)\"\r\n                  }}\r\n                />\r\n              </OverlayTrigger>\r\n            </>\r\n          ) : null}\r\n        </Navbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavBarjs;\r\n","import React, {Component} from 'react';\r\nimport \"./404.css\";\r\n\r\nclass NotFound extends Component {\r\n    render() {\r\n      return (\r\n          <div className=\"notFoundWrapper\">\r\n            <h1>404</h1>\r\n            <h3>Page Not Found :(</h3>\r\n          </div>\r\n      )\r\n    }\r\n}\r\n\r\nexport default NotFound;","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport date from \"date-and-time\";\r\nimport {\r\n  Button,\r\n  Spinner,\r\n  ToggleButtonGroup,\r\n  ToggleButton,\r\n  InputGroup,\r\n  FormControl,\r\n  Form\r\n} from \"react-bootstrap\";\r\nimport \"./score.css\";\r\n\r\nvar sortAscDesc = localStorage.getItem(\"scoreLocalStorage\");\r\nvar baseUrl = `globalwinescores/latest/?ordering=${sortAscDesc}&limit=20`;\r\n\r\nconst API_KEY = process.env.REACT_APP_API_KEY;\r\n\r\nfunction Scores(props) {\r\n  const [data, setData] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n\r\n  // Variables for filter search\r\n  // var [year, setYear] = useState(\"\");\r\n  // var [something, scoreSelection] = useState(\"\");\r\n  // var scoreSelection1 = \"\";\r\n  // var colorSelection = \"\";\r\n  var userScore = localStorage.getItem('yearSelect');\r\n\r\n  var cartArray = JSON.parse(localStorage.getItem(\"userCart\")) || [];\r\n\r\n\r\n  // API Hook\r\n  useEffect(() => {\r\n    localStorage.setItem(\"colorSelect\", \"\");\r\n    localStorage.setItem(\"scoreSelect\", \"\");\r\n    localStorage.setItem(\"yearSelect\", \"\");\r\n    const fetchData = async () => {\r\n      const result = await axios(`${baseUrl}`, {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          Authorization: API_KEY\r\n        }\r\n      });\r\n\r\n      // console.log(baseUrl);\r\n      // console.log(result.data.results);\r\n      setData(result.data.results);\r\n      setIsLoading(false);\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n\r\n\r\n   // API filter function\r\n  const filterSearch = () => {\r\n    localStorage.setItem(\"yearSelect\", \"\");\r\n    console.log(baseUrl);\r\n    const fetchData = async () => {\r\n      const result = await axios(`${baseUrl}`, {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          Authorization: API_KEY\r\n        }\r\n      });\r\n      // console.log(baseUrl);\r\n      // console.log(result.data.results);\r\n      setData(result.data.results);\r\n      setIsLoading(false);\r\n    };\r\n    fetchData();\r\n  }\r\n\r\n\r\n  // Submit button API Call and Validation\r\n\r\n  const searchValidation = () => {\r\n    setIsLoading(true);\r\n    // If no options, no valid year, all optons\r\n    if (!localStorage.getItem(\"yearSelect\") && !localStorage.getItem(\"scoreSelect\") && !localStorage.getItem(\"colorSelect\")) {\r\n      alert(\"Please enter search options to continue\");\r\n    }\r\n    if (\r\n      localStorage.getItem(\"yearSelect\").length !== 4 &&\r\n      localStorage.getItem(\"yearSelect\").length !== 0 &&\r\n      !localStorage.getItem(\"scoreSelect\") &&\r\n      !localStorage.getItem(\"colorSelect\")\r\n    ) {\r\n      alert(\"Please enter a valid Year\");\r\n    }\r\n    if (localStorage.getItem(\"yearSelect\").length === 4 && localStorage.getItem(\"scoreSelect\") && localStorage.getItem(\"colorSelect\")) {\r\n      baseUrl = `globalwinescores/latest/?limit=20&ordering=${localStorage.getItem(\"scoreSelect\")}&limit=20&vintage=${localStorage.getItem(\"yearSelect\")}&color=${localStorage.getItem(\"colorSelect\")}`;\r\n      console.log(\"all There\");\r\n      console.log(baseUrl);\r\n      filterSearch();\r\n\r\n      // if Year routes\r\n    }\r\n    if (localStorage.getItem(\"yearSelect\").length === 4 && localStorage.getItem(\"scoreSelect\") && !localStorage.getItem(\"colorSelect\")) {\r\n      baseUrl = `globalwinescores/latest/?limit=20&ordering=${localStorage.getItem(\"scoreSelect\")}&limit=20&vintage=${localStorage.getItem(\"yearSelect\")}`;\r\n      console.log(\"year and score\");\r\n      console.log(baseUrl);\r\n      filterSearch();\r\n    }\r\n    if (localStorage.getItem(\"yearSelect\").length === 4 && !localStorage.getItem(\"scoreSelect\") && localStorage.getItem(\"colorSelect\")) {\r\n      baseUrl = `globalwinescores/latest/?limit=20&color=${localStorage.getItem(\"colorSelect\")}&limit=20&vintage=${localStorage.getItem(\"yearSelect\")}`;\r\n      console.log(\"year and color\");\r\n      console.log(baseUrl);\r\n      filterSearch();\r\n    }\r\n    if (localStorage.getItem(\"yearSelect\").length === 4 && !localStorage.getItem(\"scoreSelect\") && !localStorage.getItem(\"colorSelect\")) {\r\n      baseUrl = `globalwinescores/latest/?limit=20&vintage=${localStorage.getItem(\"yearSelect\")}`;\r\n      console.log(localStorage.getItem(\"scoreSelect\"));\r\n      console.log(\"year only\");\r\n      console.log(baseUrl);\r\n      filterSearch();\r\n    }\r\n\r\n    // if Score routes\r\n    if (\r\n      localStorage.getItem(\"scoreSelect\") &&\r\n      (localStorage.getItem(\"yearSelect\").length !== 4 || localStorage.getItem(\"yearSelect\").length <= 3) &&\r\n      !localStorage.getItem(\"colorSelect\")\r\n    ) {\r\n      baseUrl = `globalwinescores/latest/?limit=20&ordering=${localStorage.getItem(\"scoreSelect\")}`;\r\n      console.log(\"score only\");\r\n      console.log(baseUrl);\r\n      filterSearch();\r\n    }\r\n    if (\r\n      localStorage.getItem(\"scoreSelect\") &&\r\n      (localStorage.getItem(\"yearSelect\").length !== 4 || localStorage.getItem(\"yearSelect\").length <= 3) &&\r\n      localStorage.getItem(\"colorSelect\")\r\n    ) {\r\n      baseUrl = `globalwinescores/latest/?limit=20&ordering=${localStorage.getItem(\"scoreSelect\")}&color=${localStorage.getItem(\"colorSelect\")}`;\r\n      // console.log(\"score and color\");\r\n      // console.log(baseUrl);\r\n      filterSearch();\r\n    }\r\n\r\n    if (\r\n      !localStorage.getItem(\"scoreSelect\") &&\r\n      (localStorage.getItem(\"yearSelect\").length !== 4 || localStorage.getItem(\"yearSelect\").length <= 3) &&\r\n      localStorage.getItem(\"colorSelect\")\r\n    ) {\r\n      baseUrl = `globalwinescores/latest/?limit=20&color=${localStorage.getItem(\"colorSelect\")}`;\r\n      console.log(\"color only\");\r\n      console.log(baseUrl);\r\n      filterSearch();\r\n    }\r\n  }\r\n\r\n  \r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      {isLoading ? (\r\n        <div className=\"spinner\">\r\n          <Spinner animation=\"border\" role=\"status\"></Spinner>\r\n          <p>Loading...</p>\r\n        </div>\r\n      ) : null}\r\n\r\n      {!isLoading ? (\r\n        <div className=\"sortMenuWrapper\">\r\n\r\n          {/* Score Sort */}\r\n          <ToggleButtonGroup\r\n            className=\"scoreSortWrapper\"\r\n            type=\"radio\"\r\n            name=\"options\"\r\n          >\r\n            <InputGroup.Text\r\n              type=\"number\"\r\n              className=\"dateInput\"\r\n              id=\"inputGroup-sizing-default\"\r\n            >\r\n              Score:{\" \"}\r\n            </InputGroup.Text>\r\n\r\n            <ToggleButton\r\n            onClick={() => localStorage.setItem(\"scoreSelect\", \"-score\")}\r\n              // onClick={() => (scoreSelection = something = \"-score\")}\r\n              variant=\"outline-dark\"\r\n              value={1}\r\n            >\r\n              Descending\r\n            </ToggleButton>\r\n\r\n            {/* <ToggleButton onClick={() => scoreSelection = 'score'} variant='outline-dark' value={2}>Ascending</ToggleButton>\r\n      </ToggleButtonGroup>     */}\r\n            <ToggleButton\r\n            onClick={() => localStorage.setItem(\"scoreSelect\", \"score\")}\r\n              // onClick={() => (scoreSelection = \"score\")}\r\n              variant=\"outline-dark\"\r\n              value={2}\r\n            >\r\n              Ascending\r\n            </ToggleButton>\r\n          </ToggleButtonGroup>\r\n\r\n\r\n\r\n          {/* Color Sort */}\r\n          <ToggleButtonGroup\r\n            className=\"colorSortWrapper\"\r\n            type=\"radio\"\r\n            name=\"options\"\r\n          >\r\n      \r\n            <InputGroup.Text\r\n              type=\"number\"\r\n              className=\"dateInput\"\r\n              id=\"inputGroup-sizing-default\"\r\n            >\r\n              Color:{\" \"}\r\n            </InputGroup.Text>\r\n            <ToggleButton\r\n            onClick={() => localStorage.setItem('colorSelect', \"red\")}\r\n              // onClick={() => (colorSelection = \"red\")}\r\n              variant=\"outline-dark\"\r\n              value={1}\r\n            >\r\n              Red\r\n            </ToggleButton>\r\n            <ToggleButton\r\n            onClick={() => localStorage.setItem('colorSelect', \"white\")}\r\n              // onClick={() => (colorSelection = \"white\")}\r\n              variant=\"outline-dark\"\r\n              value={2}\r\n            >\r\n              White\r\n            </ToggleButton>\r\n            <ToggleButton\r\n            onClick={() => localStorage.setItem('colorSelect', \"pink\")}\r\n\r\n              // onClick={() => (colorSelection = \"pink\")}\r\n              variant=\"outline-dark\"\r\n              value={3}\r\n            >\r\n              Pink\r\n            </ToggleButton>\r\n          </ToggleButtonGroup>\r\n\r\n\r\n\r\n          {/* Date Sort */}\r\n          <InputGroup lg=\"2\" className=\"dateSortWrapper\">\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text\r\n                type=\"number\"\r\n                className=\"dateInput\"\r\n                id=\"inputGroup-sizing-default\"\r\n              >\r\n                Year:{\" \"}\r\n              </InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <FormControl\r\n              type=\"number\"\r\n              onChange={event => {\r\n                localStorage.setItem(\"yearSelect\", event.target.value)\r\n              }}\r\n              placeholder=\"'eg: 1981'\"\r\n              aria-label=\"Default\"\r\n              aria-describedby=\"inputGroup-sizing-default\"\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Please provide a valid year.\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n\r\n\r\n\r\n          {/* Submit Search */}\r\n          <Button\r\n            onClick={searchValidation}\r\n            className=\"sortSubmitBtn\"\r\n            variant=\"dark\"\r\n          >\r\n            Submit\r\n          </Button>\r\n        </div>\r\n      ) : null}\r\n\r\n\r\n{!isLoading ? (\r\n  <div className=\"scoreWrapper\">\r\n\r\n        {/* Maps over API filter responses */}\r\n        {data.map((item, index) => (\r\n          <li className=\"scoreList\" key={index}>\r\n            <span>\r\n              <p>{item.wine}</p>\r\n              <p>{item.score} </p>\r\n              <p>{item.color}</p>\r\n              <p>{item.vintage}</p>\r\n              <Button\r\n                className=\"addButton\"\r\n                onClick={() => {\r\n                  cartArray.push(item);\r\n                  localStorage.setItem('userCart', JSON.stringify(cartArray));\r\n                }}\r\n                variant=\"success\"\r\n                >\r\n                Add\r\n              </Button>\r\n            </span>\r\n          </li>\r\n        ))}\r\n      </div>\r\n        ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Scores;\r\n","import React, {Component} from \"react\";\r\nimport \"./router.css\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport NavBarbs from \"../NavBar/NavBarbs\";\r\nimport App from \"../../App\";\r\nimport NotFound from \"../404/404\";\r\nimport Scores from \"../Score/Score\";\r\n\r\nclass Router extends Component{\r\n\r\n  state={\r\n    routerState: true,\r\n    title: 'asdfasdfasdf',\r\n    scoreAscDes: localStorage.getItem('scoreLocalStorage') || '-score',\r\n    yearSelectionChild: ''\r\n  }\r\n\r\n\r\n  // yearSelectFunc = () => {\r\n  //   this.setState({yearSelectionChild} => ({yearSelectionChild: {...yearSelectionChild, yearSelectFunc}}))\r\n  // }\r\n  \r\n  \r\n  scoreStateDesc = () => {\r\n    this.setState({scoreAscDes: '-score'}, () => {\r\n      localStorage.setItem('scoreLocalStorage', this.state.scoreAscDes);\r\n    })\r\n  }\r\n\r\n  scoreStateAsc = () => {\r\n    this.setState({scoreAscDes: 'score'}, () => {\r\n      localStorage.setItem('scoreLocalStorage', this.state.scoreAscDes);\r\n    })\r\n  }\r\n  \r\n  \r\n  render(){\r\n    \r\n\r\n\r\n    return(\r\n  <div className=\"AppWrapper\">\r\n    <BrowserRouter>\r\n      <NavBarbs scoreAscDes={this.state.scoreAscDes} scoreStateDesc={this.scoreStateDesc.bind(this, 'new something')} scoreStateAsc={this.scoreStateAsc.bind(this, \"new something\")}/>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={App}/>\r\n\r\n\r\n        <Route exact path=\"/scoredes\" component={(props) => <Scores {...props} /> }/>\r\n\r\n        <Route component={NotFound} />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  </div>\r\n    )\r\n  }\r\n\r\n}\r\n// const Router = () => (\r\n//   <div className=\"AppWrapper\">\r\n//     <BrowserRouter>\r\n//       <NavBarbs checkVisibility={false}/>\r\n//       <Switch>\r\n//         <Route exact path=\"/\" component={App} checkVisibility={false}/>\r\n//         <Route exact path=\"/scoredes\" component={Scores} />\r\n//         <Route component={NotFound} />\r\n//       </Switch>\r\n//     </BrowserRouter>\r\n//   </div>\r\n// );\r\n\r\nexport default Router;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport Router from './Components/Router/Router';\r\n\r\nReactDOM.render(<Router/>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}